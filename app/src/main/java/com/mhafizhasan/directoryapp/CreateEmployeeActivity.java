package com.mhafizhasan.directoryapp;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;

public class CreateEmployeeActivity extends AppCompatActivity {

    EmployeeDatabase.Employee supervisor = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_create_employee);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);


        getSupportActionBar().setDisplayHomeAsUpEnabled(true);

        // Respond to create button
        Button createButton = (Button) findViewById(R.id.cce_create_button);
        createButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                createEmployee();
            }
        });

        // Respond to taps on the supervisor name field
        EditText supervisorView = (EditText) findViewById(R.id.cce_supervisor);
        supervisorView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if(event.getAction() == MotionEvent.ACTION_UP) {
                    Intent intent = new Intent(CreateEmployeeActivity.this, MainActivity.class);
                    intent.putExtra("isSelectMode", true);
                    startActivityForResult(intent, 1001, null);
                }
                return false;
            }
        });

    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if(requestCode == 1001 && resultCode == RESULT_OK) {
            // Have selected a supervisor
            supervisor = MainActivity.selectedEmployee;
            EditText supervisorView = (EditText) findViewById(R.id.cce_supervisor);
            supervisorView.setText(supervisor.name);
        }
        super.onActivityResult(requestCode, resultCode, data);
    }

    String getFieldValue(int resID) {
        EditText editText = (EditText) findViewById(resID);
        String value = editText.getEditableText().toString();
        if(value == null || value.isEmpty()) {
            // show message and focus
            editText.requestFocus();
            Snackbar.make(editText, "You must fill up all fields", Snackbar.LENGTH_SHORT).show();
            throw new RuntimeException();
        }
        return value;
    }

    public void createEmployee() {
        // Get all fields and validate
        try {
            String name = getFieldValue(R.id.cce_name);
            String position = getFieldValue(R.id.cce_position);
            String department = getFieldValue(R.id.cce_department);
            String officePhone = getFieldValue(R.id.cce_office_phone);
            String email = getFieldValue(R.id.cce_email);
            String age = getFieldValue(R.id.cce_age);
            String kpi = getFieldValue(R.id.cce_kpi);
            String address = getFieldValue(R.id.cce_address);
            // Get gender
            RadioButton maleRadionButton = (RadioButton) findViewById(R.id.cce_gender_male);
            boolean isMale = maleRadionButton.isChecked();
            // Generate ID
            String autogeneratedID = "" + (System.currentTimeMillis() / 1000);

            // Access database
            EmployeeDatabase db = new EmployeeDatabase(this);
            EmployeeDatabase.Employee employee = new EmployeeDatabase.Employee();
            employee.name = name;
            employee.position = position;
            employee.department = department;
            employee.officePhone = officePhone;
            employee.email = email;
            employee.age = Integer.parseInt(age);
            employee.KPI = Integer.parseInt(kpi);
            employee.address = address;
            employee.gender = isMale ? 1 : 2;
            employee.ID = autogeneratedID;
            employee.supervisorID = supervisor != null ? supervisor.ID : null;
            // Add to database
            db.addEmployee(employee);

            finish();

        } catch (Exception e) {
            // Not a complete form
            return;
        }
    }

}
